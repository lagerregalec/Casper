{"version":3,"sources":["jquery.fitvids.js","infinite-scroll.js","map.js","text-changer.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","push","ignoreList","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","status","removeEventListener","onScroll","onResize","response","querySelectorAll","forEach","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","addEventListener","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive","addedGeoJSON","config","minZoom","maxZoom","maxBoundsViscosity","map","L","bigIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","smallIcon","popup","onZoomend","feature","layer","getZoom","eachLayer","setIcon","tileLayer","attribution","addTo","fetch","then","json","data","geoJSON","pointToLayer","geoJsonPoint","latlng","marker","onEachFeature","geometry","type","bindPopup","properties","gefaess_art","fitBounds","getBounds","padding","setMinZoom","setMaxBounds","pad","on","editable","words","animationTimeInms","delayInms","close","index","textContent","interval","setInterval","text","clearInterval","setTimeout","slice","initialText","i","writeWords"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n","/* eslint-disable no-undef */\n/**\n * geoJSON simple\n */\n// Variable for GeoJSON data\nlet addedGeoJSON;\n\n// config map\nlet config = {\n    minZoom: 1,\n    maxZoom: 18,\n    maxBoundsViscosity: 0.9,\n};\n\n// calling map\nconst map = L.map(\"map\", config);\n\n// marker icon big\nvar bigIcon = L.icon({\n    iconUrl: '/assets/containerIcon.svg',\n    iconSize: [100, 100],\n    iconAnchor: [50, 50],\n    popupAnchor: [0, -5],\n    /*shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n    shadowAnchor: [22, 94]*/\n});\n\n// marker icon small\nvar smallIcon = L.icon({\n    iconUrl: '/assets/smallIcon.svg',\n    iconSize: [10, 10],\n    iconAnchor: [5, 5],\n    popupAnchor: [0, -5],\n    /*shadowUrl: 'my-icon-shadow.png',\n    shadowSize: [68, 95],\n    shadowAnchor: [22, 94]*/\n});\n\n// PopUp\nvar popup = L.popup();\n\n// Used to load and display tile layers on the map\n// Most tile servers require attribution, which you can set under `Layer`\n//https://api.mapbox.com/styles/v1/anikolov/cl1c3uy3k001s14s9lr4p3kvp/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYW5pa29sb3YiLCJhIjoiY2wxYzNraGFjMDF2ODNnbjFwN2FoenI2eiJ9.v5X2PYctWmudRI_xdVGb8w\n\nL.tileLayer(\"https://api.mapbox.com/styles/v1/anikolov/cl1c3uy3k001s14s9lr4p3kvp/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiYW5pa29sb3YiLCJhIjoiY2wxYzNraGFjMDF2ODNnbjFwN2FoenI2eiJ9.v5X2PYctWmudRI_xdVGb8w\", {\n    attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n}).addTo(map);\n\n\n// adding geojson by fetch\n// of course you can use jquery, axios etc.\nfetch(\"https://raw.githubusercontent.com/lagerregalec/Einetonne/main/assets/data/containers.json\")\n    .then(function (response) {\n        return response.json();\n    })\n    .then(function (data) {\n        // use geoJSON\n        addedGeoJSON = L.geoJSON(data, {\n\n            pointToLayer: function(geoJsonPoint, latlng){\n                return L.marker(latlng,{\n                    icon: smallIcon\n                });\n            },\n\n            onEachFeature: function(feature, layer){\n                if(feature.geometry.type ==='Point'){\n                    layer.bindPopup(feature.properties.gefaess_art);\n                }\n            }\n\n        }).addTo(map);\n        // console.log(data);\n        //Dynamically adjust Viewport properties based on geoJSON data\n        map.fitBounds(addedGeoJSON.getBounds(),{\n            padding:[20,20]\n        });\n        map.setMinZoom(map.getZoom());\n        map.setMaxBounds(addedGeoJSON.getBounds().pad(0.1));\n        map.on('zoomend', onZoomend);\n    });\n\nfunction onZoomend(feature, layer) {\n    var currentZoom = map.getZoom();\n    if (currentZoom >= 18) {\n        addedGeoJSON.eachLayer(function(layer) {\n            layer.setIcon(bigIcon);\n        });\n    }\n    else{\n        addedGeoJSON.eachLayer(function(layer) {\n            layer.setIcon(smallIcon);\n        });\n    }\n}\n\n/*\n\n// --------------------------------------------------\n\n// create custom button\nconst customControl = L.Control.extend({\n    // button position\n    options: {\n        position: \"topleft\",\n        className: \"locate-button leaflet-bar\",\n        html: '<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3A8.994 8.994 0 0 0 13 3.06V1h-2v2.06A8.994 8.994 0 0 0 3.06 11H1v2h2.06A8.994 8.994 0 0 0 11 20.94V23h2v-2.06A8.994 8.994 0 0 0 20.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/></svg>',\n        style:\n            \"margin-top: 0; left: 0; display: flex; cursor: pointer; justify-content: center; font-size: 2rem;\",\n    },\n\n    // method\n    onAdd: function (map) {\n        this._map = map;\n        const button = L.DomUtil.create(\"div\");\n        L.DomEvent.disableClickPropagation(button);\n\n        button.title = \"locate\";\n        button.innerHTML = this.options.html;\n        button.className = this.options.className;\n        button.setAttribute(\"style\", this.options.style);\n\n        L.DomEvent.on(button, \"click\", this._clicked, this);\n\n        return button;\n    },\n    _clicked: function (e) {\n        L.DomEvent.stopPropagation(e);\n\n        // this.removeLocate();\n\n        this._checkLocate();\n\n        return;\n    },\n    _checkLocate: function () {\n        return this._locateMap();\n    },\n\n    _locateMap: function () {\n        const locateActive = document.querySelector(\".locate-button\");\n        const locate = locateActive.classList.contains(\"locate-active\");\n        // add/remove class from locate button\n        locateActive.classList[locate ? \"remove\" : \"add\"](\"locate-active\");\n\n        // remove class from button\n        // and stop watching location\n        if (locate) {\n            this.removeLocate();\n            this._map.stopLocate();\n            return;\n        }\n\n        // location on found\n        this._map.on(\"locationfound\", this.onLocationFound, this);\n        // locataion on error\n        this._map.on(\"locationerror\", this.onLocationError, this);\n\n        // start locate\n        this._map.locate({ setView: true, enableHighAccuracy: true });\n    },\n    onLocationFound: function (e) {\n        // add circle\n        this.addCircle(e).addTo(this.featureGroup()).addTo(map);\n\n        // add marker\n        this.addMarker(e).addTo(this.featureGroup()).addTo(map);\n\n        // add legend\n    },\n    // on location error\n    onLocationError: function (e) {\n        this.addLegend(\"Location access denied.\");\n    },\n    // feature group\n    featureGroup: function () {\n        return new L.FeatureGroup();\n    },\n    // add legend\n    addLegend: function (text) {\n        const checkIfDescriotnExist = document.querySelector(\".description\");\n\n        if (checkIfDescriotnExist) {\n            checkIfDescriotnExist.textContent = text;\n            return;\n        }\n\n        const legend = L.control({ position: \"bottomleft\" });\n\n        legend.onAdd = function () {\n            let div = L.DomUtil.create(\"div\", \"description\");\n            L.DomEvent.disableClickPropagation(div);\n            const textInfo = text;\n            div.insertAdjacentHTML(\"beforeend\", textInfo);\n            return div;\n        };\n        legend.addTo(this._map);\n    },\n    addCircle: function ({ accuracy, latitude, longitude }) {\n        return L.circle([latitude, longitude], accuracy / 2, {\n            className: \"circle-test\",\n            weight: 2,\n            stroke: false,\n            fillColor: \"#136aec\",\n            fillOpacity: 0.15,\n        });\n    },\n    addMarker: function ({ latitude, longitude }) {\n        return L.marker([latitude, longitude], {\n            icon: L.divIcon({\n                className: \"located-animation\",\n                iconSize: L.point(17, 17),\n                popupAnchor: [0, -15],\n            }),\n        }).bindPopup(\"Your are here :)\");\n    },\n    removeLocate: function () {\n        this._map.eachLayer(function (layer) {\n            if (layer instanceof L.Marker) {\n                const { icon } = layer.options;\n                if (icon?.options.className === \"located-animation\") {\n                    map.removeLayer(layer);\n                }\n            }\n            if (layer instanceof L.Circle) {\n                if (layer.options.className === \"circle-test\") {\n                    map.removeLayer(layer);\n                }\n            }\n        });\n    },\n});\n\n// adding new button to map control\nmap.addControl(new customControl());\n\n*/\n\n","const editable = document.querySelector('.changing-text');\n\nconst words = [\n    'CO2',\n    'Biomasse',\n    'Tonnen',\n    'Kompost',\n    'Menschen',\n    'Biogas',\n    'Wertstoffe',\n    'Ressourcen',\n    'Lebensmittel',\n    'Erde',\n    'Zukunft'\n];\nconst animationTimeInms = 100;\nconst delayInms = 2000;\n\nfunction close(index) {\n    editable.textContent = words[index % words.length];\n    const interval = setInterval(function() {\n        const text = editable.textContent;\n        if (!text) {\n            clearInterval(interval);\n            setTimeout(function() {\n                open(++index);\n            }, 100);\n        }\n        editable.textContent = text.slice(0, -1);\n    }, animationTimeInms);\n}\n\nfunction open(index) {\n    const initialText = words[index % words.length];\n    let i = 1;\n    editable.textContent = '';\n    const interval = setInterval(function() {\n        const text = editable.textContent;\n        //console.log(text.length === initialText.length);\n        if (text.length === initialText.length) {\n            clearInterval(interval);\n            setTimeout(function() {\n                close(index);\n            }, delayInms);\n        }\n        editable.textContent = initialText.slice(0, i++);\n    }, animationTimeInms);\n}\n\nfunction writeWords() {\n    const i = 0;\n    open(i);\n}\n\nwriteWords();\n"]}